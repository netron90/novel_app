# """
# Django settings for website_novel project.

# Generated by 'django-admin startproject' using Django 5.0.6.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.0/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.0/ref/settings/
# """

# from pathlib import Path

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-(ce_jaqp(r*381ef2k8qtjnyd^8i9j*&dsyfcpyfv-nbxnzdnd'

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# ALLOWED_HOSTS = []


# # Application definition

# INSTALLED_APPS = [
#     'novel',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
# ]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'website_novel.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'website_novel.wsgi.application'


# # Database
# # https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postlink_db',
#         'USER': 'postlink_db_user',
#         'PASSWORD': '7Nxca5Rn2ypV4iKgZhB3ySzmsJ5wWOtT',
#         'HOST': 'dpg-cqh2jmks1f4s73bi6v60-a.oregon-postgres.render.com',  # Or your database server address
#         'PORT': '5432',
#     }
#     # 'default': {
#     #     'ENGINE': 'django.db.backends.sqlite3',
#     #     'NAME': BASE_DIR / 'db.sqlite3',
#     # },
#     # 'postgres': {
#     #     'ENGINE': 'django.db.backends.postgresql',
#     #     'NAME': 'postlink_db',
#     #     'USER': 'postlink_db_user',
#     #     'PASSWORD': '7Nxca5Rn2ypV4iKgZhB3ySzmsJ5wWOtT',
#     #     'HOST': 'dpg-cqh2jmks1f4s73bi6v60-a.oregon-postgres.render.com',  # Or your database server address
#     #     'PORT': '5432',
#     # }
# }

# # settings.py

# # DATABASE_ROUTERS = ['website_novel.db_router.TestRouter', 
# #                     'website_novel.db_router.ProductionRouter', 
# #                     'website_novel.db_router.AdminRouter' ]

# # DATABASE_ROUTERS = ['website_novel.db_router.DatabaseRouter']
# # DATABASE_ROUTERS = ['website_novel.db_router.AuthRouter']

# DATABASE_ROUTERS = [
#     'website_novel.db_router.TestRouter', 
#     'website_novel.db_router.ProductionRouter', 
#     'website_novel.db_router.AdminRouter', 
#     'website_novel.db_router.AuthRouter'
# ]



# # postgresql://postlink_db_user:7Nxca5Rn2ypV4iKgZhB3ySzmsJ5wWOtT@dpg-cqh2jmks1f4s73bi6v60-a.oregon-postgres.render.com/postlink_db
# AUTH_USER_MODEL = 'novel.User'


# # Password validation
# # https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.0/howto/static-files/

# STATIC_ROOT = BASE_DIR / 'staticfiles'
# STATIC_URL = '/static/'

# # Configure the database from the DATABASE_URL environment variable
# # DATABASES['default'] = dj_database_url.config(conn_max_age=600, ssl_require=True)

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#--------------------------------------------------------

# """
# Django settings for website_novel project.

# Generated by 'django-admin startproject' using Django 5.0.6.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.0/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.0/ref/settings/
# """

# import os

# from pathlib import Path

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# # SECRET_KEY = 'django-insecure-(ce_jaqp(r*381ef2k8qtjnyd^8i9j*&dsyfcpyfv-nbxnzdnd'
# SECRET_KEY = os.environ.get("SECRET_KEY")

# # SECURITY WARNING: don't run with debug turned on in production!
# # DEBUG = True
# DEBUG = os.environ.get("DEBUG","False").lower() == "true"

# # ALLOWED_HOSTS = []
# # ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS").split(" ")
# # ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "").split(" ")

# # Handle multiple allowed hosts
# allowed_hosts = os.environ.get("ALLOWED_HOSTS", "")
# ALLOWED_HOSTS = allowed_hosts.split() if allowed_hosts else []

# # Ensure the default values in case ALLOWED_HOSTS is not set or empty
# if not ALLOWED_HOSTS:
#     ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# # Application definition

# INSTALLED_APPS = [
#     'novel',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
# ]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'website_novel.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'website_novel.wsgi.application'


# # Database
# # https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postlink_db',
#         'USER': 'postlink_db_user',
#         'PASSWORD': '7Nxca5Rn2ypV4iKgZhB3ySzmsJ5wWOtT',
#         'HOST': 'dpg-cqh2jmks1f4s73bi6v60-a.oregon-postgres.render.com',  # Or your database server address
#         'PORT': '5432',
#     }
#     # 'default': {
#     #     'ENGINE': 'django.db.backends.sqlite3',
#     #     'NAME': BASE_DIR / 'db.sqlite3',
#     # }
#     ,
#     # 'postgres': {
#     #     'ENGINE': 'django.db.backends.postgresql',
#     #     'NAME': 'postlink_db',
#     #     'USER': 'postlink_db_user',
#     #     'PASSWORD': '7Nxca5Rn2ypV4iKgZhB3ySzmsJ5wWOtT',
#     #     'HOST': 'dpg-cqh2jmks1f4s73bi6v60-a.oregon-postgres.render.com',  # Or your database server address
#     #     'PORT': '5432',
#     # }
# }

# # settings.py

# # DATABASE_ROUTERS = ['website_novel.db_router.TestRouter', 
# #                     'website_novel.db_router.ProductionRouter', 
# #                     'website_novel.db_router.AdminRouter' ]

# # DATABASE_ROUTERS = ['website_novel.db_router.DatabaseRouter']
# # DATABASE_ROUTERS = ['website_novel.db_router.AuthRouter']

# DATABASE_ROUTERS = [
#     'website_novel.db_router.TestRouter', 
#     'website_novel.db_router.ProductionRouter', 
#     'website_novel.db_router.AdminRouter', 
#     'website_novel.db_router.AuthRouter'
# ]



# # postgresql://postlink_db_user:7Nxca5Rn2ypV4iKgZhB3ySzmsJ5wWOtT@dpg-cqh2jmks1f4s73bi6v60-a.oregon-postgres.render.com/postlink_db
# AUTH_USER_MODEL = 'novel.User'


# # Password validation
# # https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.0/howto/static-files/

# STATIC_ROOT = BASE_DIR / 'staticfiles'
# STATIC_URL = '/static/'

# # Configure the database from the DATABASE_URL environment variable
# # DATABASES['default'] = dj_database_url.config(conn_max_age=600, ssl_require=True)

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#-----------------------------------------------------------------

import os
from pathlib import Path

secretKey = "925de26def93d8f234aa96306dbc8a3c"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY", secretKey)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "False").lower() == "true"

# Handle multiple allowed hosts
# allowed_hosts = os.environ.get("ALLOWED_HOSTS", "")
# ALLOWED_HOSTS = allowed_hosts.split() if allowed_hosts else []

# Ensure the default values in case ALLOWED_HOSTS is not set or empty
# if not ALLOWED_HOSTS:
#     ALLOWED_HOSTS = ['localhost', '127.0.0.1']

ALLOWED_HOSTS = ['novel-app-2yrg.onrender.com']

# Application definition
INSTALLED_APPS = [
    'novel',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'website_novel.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'website_novel.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postlink_db',
        'USER': 'postlink_db_user',
        'PASSWORD': '7Nxca5Rn2ypV4iKgZhB3ySzmsJ5wWOtT',
        'HOST': 'dpg-cqh2jmks1f4s73bi6v60-a.oregon-postgres.render.com',
        'PORT': '5432',
    }
}

# Authentication
AUTH_USER_MODEL = 'novel.User'

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATIC_URL = '/static/'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
